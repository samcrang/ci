#!/usr/bin/env bash
set -e

usage() {
  echo "CI 0.0.1"
  echo "usage: $0 <directory>"
}

teardown() {
  project="$1"
  run_number="$2"

  if [ -f "$project/teardown.sh" ]; then
    bash "$project/teardown.sh" | tee -a "$project/builds/$run_number/log"
  fi
}

setup() {
  project="$1"
  run_number="$2"

  if [ -f "$project/setup.sh" ]; then
    bash "$project/setup.sh" | tee -a "$project/builds/$run_number/log"
  fi
}

run_project() {
  project="$1"
  run_number="$2"

  if [ -f "$project/run.sh" ]; then
    setup "$project" "$run_number"
    set +e
    OUTPUT=$(bash "$project/run.sh")
    status=$?
    set -e
    echo "$OUTPUT" | tee -a "$project/builds/$run_number/log"
    teardown "$project" "$run_number"
  else
    echo "Cannot find run.sh"
    status=1
  fi
}

next_run_number() {
  project="$1"

  next_run_number=$(($(ls "$project/builds" | sort -nr | head -n 1) + 1))
}

subcommand="$1"
case "$subcommand" in
  run)
    project="$2"

    if [ -z "$project" ]; then
      usage
      exit 1
    fi

    if [ -d "$project" ]; then
      mkdir -p "$project/builds"
      next_run_number "$project"
      mkdir -p "$project/builds/$next_run_number"
      touch "$project/builds/$next_run_number/log"

      run_project "$project" "$next_run_number"
    else
      echo "Directory '$project' does not exist."
      exit 1
    fi

    if [ "$status" -eq 0 ]; then
      echo "SUCCESS" | tee -a "$project/builds/$next_run_number/log"
      exit 0
    else
      echo "FAILURE" | tee -a "$project/builds/$next_run_number/log"
      exit 1
    fi
    ;;

  init)
      directory="$2"

      if [ -z "$directory" ]; then
        usage
        exit 1
      fi

      if [ -d "$directory" ]; then
        scripts=( setup run teardown )
        for file in "${scripts[@]}"; do
          if [ ! -f "$directory/$file.sh" ]; then
            cat > "$directory/$file.sh" <<EOF
#!/usr/bin/env bash
set -e

EOF
          fi
        done
        exit 0
      else
        echo "Directory '$directory' does not exist."
        exit 1
      fi
    ;;
  *)
    usage
    exit 1
    ;;
esac
